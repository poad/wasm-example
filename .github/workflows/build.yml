name: Build

on:
  push:
    branches: [ main ]
  pull_request_target:
    branches: [ main ]

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  AWS_REGION: us-west-2

permissions:
  id-token: write
  contents: read

jobs:
  build:

    runs-on: 'ubuntu-20.04'

    steps:
    - name: Update Rust toolchain
      run: rustup update
    - name: Install cross
      run: cargo install cross
    - uses: actions/checkout@v3
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: ${{ env.AWS_REGION }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v3
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        check-latest: false

    - name: Build (infra)
      working-directory: infra
      run: yarn install && yarn build

    - name: Build (app)
      working-directory: app
      run: yarn install && yarn lint && yarn build
